{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('button[data-start]');\nstartButton.disabled = true;\n\nconst dateTimePicker = document.getElementById('datetime-picker');\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(dateTimePicker, options);\n\nconst daysDisplay = document.querySelector('[data-days]');\nconst hoursDisplay = document.querySelector('[data-hours]');\nconst minutesDisplay = document.querySelector('[data-minutes]');\nconst secondsDisplay = document.querySelector('[data-seconds]');\n\nlet intervalId;\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n\n  intervalId = setInterval(() => {\n    const now = new Date();\n    const timeLeft = userSelectedDate - now;\n    if (timeLeft <= 0) {\n      clearInterval(intervalId);\n      iziToast.success({\n        title: 'Success',\n        message: 'Countdown finished',\n      });\n      dateTimePicker.disabled = false;\n    } else {\n      const { days, hours, minutes, seconds } = convertMs(timeLeft);\n      daysDisplay.textContent = addLeadingZero(days);\n      hoursDisplay.textContent = addLeadingZero(hours);\n      minutesDisplay.textContent = addLeadingZero(minutes);\n      secondsDisplay.textContent = addLeadingZero(seconds);\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startButton","dateTimePicker","userSelectedDate","options","selectedDates","iziToast","flatpickr","daysDisplay","hoursDisplay","minutesDisplay","secondsDisplay","intervalId","timeLeft","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"2GAKA,MAAMA,EAAc,SAAS,cAAc,oBAAoB,EAC/DA,EAAY,SAAW,GAEvB,MAAMC,EAAiB,SAAS,eAAe,iBAAiB,EAChE,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BF,GAAoB,IAAI,MAC1BG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDL,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEAM,EAAUL,EAAgBE,CAAO,EAEjC,MAAMI,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EAEJX,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBC,EAAe,SAAW,GAE1BU,EAAa,YAAY,IAAM,CAE7B,MAAMC,EAAWV,EADL,IAAI,KAEhB,GAAIU,GAAY,EACd,cAAcD,CAAU,EACxBN,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,oBACjB,CAAO,EACDJ,EAAe,SAAW,OACrB,CACL,KAAM,CAAE,KAAAY,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAC5DL,EAAY,YAAcW,EAAeL,CAAI,EAC7CL,EAAa,YAAcU,EAAeJ,CAAK,EAC/CL,EAAe,YAAcS,EAAeH,CAAO,EACnDL,EAAe,YAAcQ,EAAeF,CAAO,CACpD,CACF,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}